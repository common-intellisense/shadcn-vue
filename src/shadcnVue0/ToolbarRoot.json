{
  "name": "ToolbarRoot",
  "props": {
    "orientation": {
      "default": "\"horizontal\"",
      "value": [
        "horizontal",
        "vertical",
        "undefined"
      ],
      "type": "horizontal / vertical / undefined",
      "description": "The orientation of the toolbar",
      "description_zh": "工具栏的方向"
    },
    "dir": {
      "default": "",
      "value": [
        "ltr",
        "rtl"
      ],
      "type": "ltr / rtl",
      "description": "The reading direction of the toolbar If omitted, inherits globally from DirectionProvider or assumes LTR (left-to-right) reading mode.",
      "description_zh": "工具栏的阅读方向 如果省略，则全局继承自 DirectionProvider 或采用 LTR（从左到右）阅读模式。"
    },
    "loop": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "When true, keyboard navigation will loop from last tab to first, and vice versa.",
      "description_zh": "如果为 true，键盘导航将从最后一个选项卡循环到第一个选项卡，反之亦然。"
    },
    "as": {
      "default": "div",
      "value": "",
      "type": "string | Component",
      "description": "The element or component this component should render as. Can be overwrite by asChild",
      "description_zh": "此组件应呈现为的元素或组件。可以被 asChild 覆盖"
    },
    "asChild": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Change the default rendered element for the one passed as a child, merging their props and behavior.",
      "description_zh": "更改作为子元素传递的默认渲染元素，合并其道具和行为。"
    }
  },
  "events": [],
  "methods": [],
  "suggestions": [
    "ToolbarButton",
    "ToolbarSeparator",
    "ToolbarLink",
    "ToolbarToggleGroup"
  ],
  "link": "https://www.radix-vue.com/components/toolbar.html#root",
  "link_zh": "https://www.radix-vue.com/components/toolbar.html#root"
}
