{
  "name": "SplitterResizeHandle",
  "props": {
    "as": {
      "default": "div",
      "value": "",
      "type": "AsTag | Component",
      "description": "The element or component this component should render as. Can be overwrite by asChild\n",
      "description_zh": "此组件应呈现为的元素或组件。可以被 asChild 覆盖"
    },
    "asChild": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Change the default rendered element for the one passed as a child, merging their props and behavior.\nRead our Composition guide for more details.\n",
      "description_zh": "更改作为子级传递的元素的默认渲染元素，合并其道具和行为。\n请阅读我们的作文指南，了解更多详情。"
    },
    "disabled": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Disable drag handle\n",
      "description_zh": "禁用拖动手柄"
    },
    "hitAreaMargins": {
      "default": "",
      "value": "",
      "type": "PointerHitAreaMargins",
      "description": "Allow this much margin when determining resizable handle hit detection\n",
      "description_zh": "在确定可调整大小的手柄命中检测时留出如此大的余量"
    },
    "id": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "Resize handle id (unique within group); falls back to useId when not provided\n",
      "description_zh": "调整句柄 id 的大小（组内唯一）;未提供时回退到 useId"
    },
    "tabindex": {
      "default": "0",
      "value": "",
      "type": "number",
      "description": "Tabindex for the handle\n",
      "description_zh": "句柄的 Tabindex"
    }
  },
  "events": [
    {
      "name": "dragging",
      "description": "Event handler called when dragging the handler.\n",
      "description_zh": "拖动处理程序时调用的事件处理程序。",
      "params": "[isDragging: boolean]",
      "value": ""
    }
  ],
  "methods": [],
  "suggestions": [
    "HoverCardTrigger",
    "HoverCardPortal"
  ],
  "link": "https://www.radix-vue.com/components/splitter.html",
  "link_zh": "https://www.radix-vue.com/components/splitter.html"
}
