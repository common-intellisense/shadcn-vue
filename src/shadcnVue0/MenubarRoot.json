{
  "name": "MenubarRoot",
  "props": {
    "defaultValue": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "The value of the menu that should be open when initially rendered. Use when you do not need to control the value state.",
      "description_zh": "最初呈现时应打开的菜单的值。在不需要控制值状态时使用。"
    },
    ":v-model": {
      "default": "",
      "value": "",
      "type": "string",
      "description": "The controlled value of the menu to open. Should be used in conjunction with onValueChange.",
      "description_zh": "要打开的菜单的受控值。应与 onValueChange 结合使用。",
      "required": true
    },
    "dir": {
      "default": "",
      "value": [
        "ltr",
        "rtl"
      ],
      "type": "ltr / rtl",
      "description": "The reading direction. If omitted, inherits globally from{' '} DirectionProvider or assumes LTR (left-to-right) reading mode.",
      "description_zh": "阅读方向。如果省略，则全局继承自 {' '} DirectionProvider 或采用 LTR（从左到右）读取模式。"
    },
    "loop": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "When true, keyboard navigation will loop from last item to first, and vice versa.",
      "description_zh": "如果为 true，键盘导航将从最后一项循环到第一项，反之亦然。"
    },
    "as": {
      "default": "div",
      "value": "",
      "type": "string | Component",
      "description": "The element or component this component should render as. Can be overwrite by asChild",
      "description_zh": "此组件应呈现为的元素或组件。可以被 asChild 覆盖"
    },
    "asChild": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Change the default rendered element for the one passed as a child, merging their props and behavior.",
      "description_zh": "更改作为子元素传递的默认渲染元素，合并其道具和行为。"
    }
  },
  "events": [],
  "methods": [],
  "suggestions": [
    "MenubarMenu"
  ],
  "link": "https://www.radix-vue.com/components/menubar.html#root",
  "link_zh": "https://www.radix-vue.com/components/menubar.html#root"
}
