{
  "name": "AlertDialogContent",
  "props": {
    "as": {
      "default": "div",
      "value": "",
      "type": "string | Component",
      "description": "The element or component this component should render as. Can be overwrite by asChild",
      "description_zh": "此组件应呈现为的元素或组件。可以被 asChild 覆盖"
    },
    "asChild": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Change the default rendered element for the one passed as a child, merging their props and behavior.",
      "description_zh": "更改作为子元素传递的默认渲染元素，合并其道具和行为。"
    },
    "forceMount": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Used to force mounting when more control is needed. Useful when controlling animation with Vue.js animation libraries.",
      "description_zh": "用于在需要更多控制时强制安装。在使用 Vue.js 动画库控制动画时很有用。"
    }
  },
  "events": [
    {
      "name": "openAutoFocus",
      "description": "Event handler called when auto-focusing on open.\n Can be prevented.",
      "params": "(event: Event) => void",
      "description_zh": "在打开时自动聚焦时调用的事件处理程序。\n 可以被阻止。",
      "value": ""
    },
    {
      "name": "closeAutoFocus",
      "description": "Event handler called when auto-focusing on close.\n Can be prevented.",
      "params": "(event: Event) => void",
      "description_zh": "在关闭时自动聚焦时调用的事件处理程序。\n 可以被阻止。",
      "value": ""
    },
    {
      "name": "escapeKeyDown",
      "description": "Event handler called when the escape key is down.\n Can be prevented.",
      "params": "(event: KeyboardEvent) => void",
      "description_zh": "按下 escape 键时调用的事件处理程序。\n 可以被阻止。",
      "value": ""
    },
    {
      "name": "pointerDownOutside",
      "description": "Event handler called when a `pointerdown` event happens outside of the `DismissableLayer`.\n Can be prevented.",
      "params": "(event: PointerDownOutsideEvent) => void",
      "description_zh": "在 `DismissableLayer` 之外发生 `pointerdown` 事件时调用的事件处理程序。\n 可以被阻止。",
      "value": ""
    },
    {
      "name": "focusOutside",
      "description": "Event handler called when the focus moves outside of the `DismissableLayer`.\n Can be prevented.",
      "params": "(event: FocusOutsideEvent) => void",
      "description_zh": "当焦点移出 `DismissableLayer` 时调用的事件处理程序。\n 可以被阻止。",
      "value": ""
    },
    {
      "name": "interactOutside",
      "description": "Event handler called when an interaction happens outside the `DismissableLayer`.\n Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n Can be prevented.",
      "params": "(event: PointerDownOutsideEvent | FocusOutsideEvent) => void",
      "description_zh": "在 `DismissableLayer` 之外发生交互时调用的事件处理程序。\n 具体来说，当 `pointerdown` 事件发生在外部或焦点移出时。\n 可以被阻止。",
      "value": ""
    }
  ],
  "methods": [],
  "suggestions": [
    "AlertDialogTitle",
    "AlertDialogDescription",
    "AlertDialogCancel",
    "AlertDialogAction"
  ],
  "link": "https://www.radix-vue.com/components/alert-dialog.html",
  "link_zh": "https://www.radix-vue.com/components/alert-dialog.html"
}
