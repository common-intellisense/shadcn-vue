{
  "name": "DatePickerContent",
  "props": {
    "align": {
      "default": "",
      "value": "",
      "type": "start | center | end",
      "description": "The preferred alignment against the trigger.\nMay change when collisions occur.\n",
      "description_zh": "与触发器的首选对齐方式。\n发生碰撞时可能会发生变化。"
    },
    "alignOffset": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "An offset in pixels from the start or end alignment options.\n",
      "description_zh": "开始或结束对齐选项的偏移量（以像素为单位）。"
    },
    "arrowPadding": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "The padding between the arrow and the edges of the content.\nIf your content has border-radius, this will prevent it from\noverflowing the corners.\n",
      "description_zh": "箭头和内容边缘之间的填充。\n如果您的内容具有边框半径，这将阻止它\n溢出角落。"
    },
    "as": {
      "default": "div",
      "value": "",
      "type": "AsTag | Component",
      "description": "The element or component this component should render as. Can be overwrite by asChild\n",
      "description_zh": "此组件应呈现为的元素或组件。可以被 asChild 覆盖"
    },
    "asChild": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Change the default rendered element for the one passed as a child, merging their props and behavior.\nRead our Composition guide for more details.\n",
      "description_zh": "更改作为子级传递的元素的默认渲染元素，合并其道具和行为。\n请阅读我们的作文指南，了解更多详情。"
    },
    "avoidCollisions": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "When true, overrides the side andalign preferences\nto prevent collisions with boundary edges.\n",
      "description_zh": "如果为 true，则覆盖侧面并对齐首选项\n以防止与边界边缘发生碰撞。"
    },
    "collisionBoundary": {
      "default": "",
      "value": "",
      "type": "Element | (Element | null)[] | null",
      "description": "The element used as the collision boundary. By default\nthis is the viewport, though you can provide additional\nelement(s) to be included in this check.\n",
      "description_zh": "用作碰撞边界的元素。默认情况下\n这是视口，但您可以提供其他\n要包含在此检查中的元素。"
    },
    "collisionPadding": {
      "default": "",
      "value": "",
      "type": "number | Partial<Record<top | right | bottom | left, number>>",
      "description": "The distance in pixels from the boundary edges where collision\ndetection should occur. Accepts a number (same for all sides),\nor a partial padding object, for example: { top: 20, left: 20 }.\n",
      "description_zh": "与发生碰撞的边界边的距离（以像素为单位）\n应进行检测。接受一个数字（所有边都相同），\n或部分填充对象，例如：{ top： 20， left： 20 }。"
    },
    "disableOutsidePointerEvents": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "When true, hover/focus/click interactions will be disabled on elements outside\nthe DismissableLayer. Users will need to click twice on outside elements to\ninteract with them: once to close the DismissableLayer, and again to trigger the element.\n",
      "description_zh": "如果为 true，则将在外部元素上禁用悬停/焦点/单击交互\nDismissableLayer。用户需要在外部元素上单击两次才能\n与它们交互：一次用于关闭 DismissableLayer，另一次用于触发元素。"
    },
    "forceMount": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with Vue animation libraries.\n",
      "description_zh": "用于在需要更多控制时强制安装。在以下情况下有用\n使用 Vue 动画库控制动画。"
    },
    "hideWhenDetached": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Whether to hide the content when the trigger becomes fully occluded.\n",
      "description_zh": "是否在触发器完全遮挡时隐藏内容。"
    },
    "prioritizePosition": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Force content to be position within the viewport.\nMight overlap the reference element, which may not be desired.\n",
      "description_zh": "强制内容位于视口内。\n可能会与引用元素重叠，这可能是不需要的。"
    },
    "side": {
      "default": "",
      "value": "",
      "type": "top | right | bottom | left",
      "description": "The preferred side of the trigger to render against when open.\nWill be reversed when collisions occur and avoidCollisions\nis enabled.\n",
      "description_zh": "触发器的首选侧，在打开时要针对它进行渲染。\n发生碰撞时会反转并避免碰撞\n已启用。"
    },
    "sideOffset": {
      "default": "",
      "value": "",
      "type": "number",
      "description": "The distance in pixels from the trigger.\n",
      "description_zh": "与触发器的距离（以像素为单位）。"
    },
    "sticky": {
      "default": "",
      "value": "",
      "type": "partial | always",
      "description": "The sticky behavior on the align axis. partial will keep the\ncontent in the boundary as long as the trigger is at least partially\nin the boundary whilst \"always\" will keep the content in the boundary\nregardless.\n",
      "description_zh": "对齐轴上的粘性行为。部分将保留\n只要触发器至少部分在边界中的内容\n在边界中，而“始终”将内容保留在边界中\n无论。"
    },
    "trapFocus": {
      "default": "",
      "value": "",
      "type": "boolean",
      "description": "Whether focus should be trapped within the MenuContent\n",
      "description_zh": "是否应将焦点困在 MenuContent 中"
    },
    "updatePositionStrategy": {
      "default": "",
      "value": "",
      "type": "always | optimized",
      "description": "Strategy to update the position of the floating element on every animation frame.\n",
      "description_zh": "更新浮动元素在每个动画帧上的位置的策略。"
    }
  },
  "events": [],
  "methods": [],
  "link": "https://www.radix-vue.com/components/date-field.html#content",
  "link_zh": "https://www.radix-vue.com/components/date-field.html#content"
}
