{
  "name": "ComboboxContent",
  "props": {
    "position": {
      "default": "\"inline\"",
      "value": [
        "inline",
        "popper"
      ],
      "type": "inline / popper",
      "description": "The positioning mode to use, inline is the default and behaves similarly to a native MacOS menu by positioning content relative to the active item. popper positions content in the same way as our other primitives, for example Popover or DropdownMenu.",
      "description_zh": "要使用的定位模式“内联”是默认模式，其行为类似于本机 MacOS 菜单，方法是将内容相对于活动项进行定位。popper 以与其他基元相同的方式定位内容，例如 Popover 或 DropdownMenu。"
    },
    "bodyLock": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "The document.body will be lock, and scrolling will be disabled.",
      "description_zh": "document.body 将被锁定，滚动将被禁用。"
    },
    "disableOutsidePointerEvents": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "The hover/focus/click interactions will be disabled on elements outside the Content",
      "description_zh": "悬停/焦点/单击交互将在内容外部的元素上禁用"
    },
    "side": {
      "default": "bottom",
      "value": [
        "top",
        "right",
        "bottom",
        "left"
      ],
      "type": "top / right / bottom / left",
      "description": "The hover/focus/click interactions will be disabled on elements outside the Content",
      "description_zh": "悬停/焦点/单击交互将在内容外部的元素上禁用"
    },
    ":sideOffset": {
      "default": "0",
      "value": "",
      "type": "number",
      "description": "The distance in pixels from the anchor. Only available when position is set to popper.",
      "description_zh": "与锚点的距离（以像素为单位）。仅当 position 设置为 popper 时可用。"
    },
    "align": {
      "default": "start",
      "value": [
        "start",
        "center",
        "end"
      ],
      "type": "start / center / end",
      "description": "The preferred alignment against the anchor. May change when collisions occur. Only available when position is set to popper.",
      "description_zh": "与锚点的首选对齐方式。发生碰撞时可能会发生变化。仅当 position 设置为 popper 时可用。"
    },
    ":alignOffset": {
      "default": "0",
      "value": "",
      "type": "number",
      "description": "An offset in pixels from the \"start\" or \"end\" alignment options. Only available when position is set to popper.",
      "description_zh": "与“开始”或“结束”对齐选项的偏移量（以像素为单位）。仅当 position 设置为 popper 时可用。"
    },
    "avoidCollisions": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "When true, overrides the side and align preferences to prevent collisions with boundary edges. Only available when position is set to popper .",
      "description_zh": "如果为 true，则覆盖侧和对齐首选项，以防止与边界边发生冲突。仅当 position 设置为 popper 时可用。"
    },
    "collisionBoundary": {
      "default": "[]",
      "value": "",
      "type": "Element | null | Array<Element | null>",
      "description": "The element used as the collision boundary. By default this is the viewport, though you can provide additional element(s) to be included in this check. Only available when position is set to popper.",
      "description_zh": "用作碰撞边界的元素。默认情况下，这是视口，但您可以提供要包含在此检查中的其他元素。仅当 position 设置为 popper 时可用。"
    },
    ":collisionPadding": {
      "default": "10",
      "value": "",
      "type": "number | Partial<Record<Side, number>>",
      "description": "The distance in pixels from the boundary edges where collision detection should occur. Accepts a number (same for all sides), or a partial padding object, for example: top: 20, left: 20x . Only available when position is set to popper .",
      "description_zh": "与应进行碰撞检测的边界边缘之间的距离（以像素为单位）。接受一个数字（所有边都相同）或部分填充对象，例如：top： 20， left： 20x 。仅当 position 设置为 popper 时可用。"
    },
    ":arrowPadding": {
      "default": "0",
      "value": "",
      "type": "number",
      "description": "The padding between the arrow and the edges of the content. If your content has border-radius, this will prevent it from overflowing the corners. Only available when position is set to popper.",
      "description_zh": "箭头和内容边缘之间的填充。如果您的内容具有边框半径，这将防止它溢出角落。仅当 position 设置为 popper 时可用。"
    },
    "sticky": {
      "default": "\"partial\"",
      "value": [
        "partial",
        "always"
      ],
      "type": "partial / always",
      "description": "The sticky behavior on the align axis. \"partial\" will keep the content in the boundary as long as the trigger is at least partially in the boundary whilst \"always\" will keep the content in the boundary regardless. Only available when position is set to popper.",
      "description_zh": "对齐轴上的粘性行为。只要触发器至少部分在边界中，“partial”就会将内容保留在边界中，而“always”将始终将内容保留在边界中。仅当 position 设置为 popper 时可用。"
    },
    "hideWhenDetached": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Whether to hide the content when the trigger becomes fully occluded. Only available when position is set to popper.",
      "description_zh": "是否在触发器完全遮挡时隐藏内容。仅当 position 设置为 popper 时可用。"
    },
    "as": {
      "default": "div",
      "value": "",
      "type": "string | Component",
      "description": "The element or component this component should render as. Can be overwrite by asChild",
      "description_zh": "此组件应呈现为的元素或组件。可以被 asChild 覆盖"
    },
    "asChild": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Change the default rendered element for the one passed as a child, merging their props and behavior.",
      "description_zh": "更改作为子元素传递的默认渲染元素，合并其道具和行为。"
    }
  },
  "events": [
    {
      "name": "closeAutoFocus",
      "params": "(event: Event) => void",
      "description": "Event handler called when focus moves to the trigger after closing. It can be prevented by calling event.preventDefault.",
      "description_zh": "关闭后焦点移动到触发器时调用的事件处理程序。可以通过调用 event.preventDefault 来防止它。",
      "value": ""
    },
    {
      "name": "escapeKeyDown",
      "params": "(event: KeyboardEvent) => void",
      "description": "Event handler called when the escape key is down. It can be prevented by calling event.preventDefault.",
      "description_zh": "当转义键关闭时调用的事件处理程序。可以通过调用 event.preventDefault 来防止它。",
      "value": ""
    },
    {
      "name": "pointerDownOutside",
      "params": "(event: PointerDownOutsideEvent) => void",
      "description": "Event handler called when a pointer event occurs outside the bounds of the component. It can be prevented by calling event.preventDefault.",
      "description_zh": "当指针事件发生在组件边界之外时调用的事件处理程序。可以通过调用 event.preventDefault 来防止它。",
      "value": ""
    }
  ],
  "methods": [],
  "suggestions": [
    "ComboboxViewport",
    "ComboboxArrow"
  ],
  "link": "https://www.radix-vue.com/components/combobox.html",
  "link_zh": "https://www.radix-vue.com/components/combobox.html"
}
